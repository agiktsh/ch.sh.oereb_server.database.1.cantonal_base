name: 'Sync av and oereb config data'

on:
  schedule:
    # this is in UTC so it means every day at 3 AM this trigger is pulled
    - cron: 0 2 * * *
  workflow_dispatch:
    inputs:
      force_build:
        description: "should a new version be forced (0=NO, 1=YES)"
        required: true
        default: "0"
jobs:
  synchronize_upstream_cantonal_data:
    environment: sync
    name: 'Sync federal basic data'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    env:
      OEREBKRM_CANTON_DOWNLOAD_URL: https://models.geo.sh.ch/AGI/OeREB
      OEREBKRM_CANTON_FILE_NAME: ch.sh.OeREBKRM_V2_0.xml

      AV_DOWNLOAD_URL: https://www.geodienste.ch/downloads/interlis/av/SH
      AV_FILE_NAME: av_SH_lv95.zip

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_TOKEN }}
      - name: Setup Git
        run: |
          git lfs install
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_NAME }}"
      - name: Prepare release check
        run: |
          echo "0" > /tmp/release

      - name: Download cantonal configuration catalogues
        run: |
          curl -X GET -o ./$OEREBKRM_CANTON_FILE_NAME $OEREBKRM_CANTON_DOWNLOAD_URL/$OEREBKRM_CANTON_FILE_NAME
      - name: Handle changes of Federal Laws catalogue
        env:
          UPSTREAM_URL: $OEREBKRM_CANTON_DOWNLOAD_URL/$OEREBKRM_CANTON_FILE_NAME
        run: |
          git add $OEREBKRM_CANTON_FILE_NAME
          ./scripts/ch.sh.oereb_base.sync.commit-push_if_dirty.sh

      - name: Download and unzip AV
        run: |
          curl -X GET -o /tmp/$AV_FILE_NAME $AV_DOWNLOAD_URL/$AV_FILE_NAME
          ls -ls /tmp/$AV_FILE_NAME
          unzip -o /tmp/$AV_FILE_NAME '*.itf' -d ./
          git add $(find ./ -iname '*.itf')
          ./scripts/ch.sh.oereb_base.sync.commit-push_if_dirty.sh

      - name: Draft daily release
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          TAG=$(date +'%Y%m%d.%H%M.%S')-$(git rev-parse --short master)
          if [ $(cat /tmp/release) == "1" ] || [ "${{ inputs.force_build }}" == "1" ]; then echo "draft release" && gh release create $TAG; else echo "no release draft"; fi
